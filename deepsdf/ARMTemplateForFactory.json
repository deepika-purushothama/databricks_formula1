{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "deepsdf"
		},
		"ADLSLinkedservice_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLSLinkedservice'"
		},
		"samplelinkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'samplelinkedservice'"
		},
		"ADLSLinkedservice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://deepsstorage18.dfs.core.windows.net/"
		},
		"Databricks_formula1_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0128-071404-6mvirclp"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Formula1_Project_ADF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check condition",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(equals(pipeline().parameters.p_ingestion_method, 'Incremental-load'), equals(pipeline().parameters.p_ingestion_method, 'delta'))\n",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "pyspark and sql",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Formula1_Project/Automation_Code",
										"baseParameters": {
											"ingestion_method": {
												"value": "@pipeline().parameters.p_ingestion_method",
												"type": "Expression"
											},
											"file_date": {
												"value": "\"\"",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Databricks_formula1",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "set_variable_filedate",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "p_file_date",
										"value": {
											"value": "@not(equals(pipeline().parameters.p_file_date, ''))\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "incrementload and delta",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "set_variable_filedate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Formula1_Project/Automation_Code",
										"baseParameters": {
											"ingestion_method": {
												"value": "@pipeline().parameters.p_ingestion_method",
												"type": "Expression"
											},
											"file_date": {
												"value": "@pipeline().parameters.p_file_date",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Databricks_formula1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_ingestion_method": {
						"type": "string",
						"defaultValue": "pyspark"
					},
					"p_file_date": {
						"type": "string"
					}
				},
				"variables": {
					"p_file_date": {
						"type": "Boolean"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-28T11:09:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Databricks_formula1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSLinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "demo"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSLinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SampleCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "samplelinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "circuits.csv",
						"container": "demo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "circuitId",
						"type": "String"
					},
					{
						"name": "circuitRef",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "lat",
						"type": "String"
					},
					{
						"name": "lng",
						"type": "String"
					},
					{
						"name": "alt",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/samplelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSLinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSLinkedservice_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLSLinkedservice_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Databricks_formula1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-1459277835259914.14.azuredatabricks.net",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/2dd9cc3c-a183-49d8-a6a4-7910e293d4c0/resourceGroups/deepika-rg/providers/Microsoft.Databricks/workspaces/deepika-ws",
					"existingClusterId": "[parameters('Databricks_formula1_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/samplelinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('samplelinkedservice_connectionString')]"
				}
			},
			"dependsOn": []
		}
	]
}